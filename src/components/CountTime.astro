---
const { id, thatMoment } = Astro.props;
---
<div class="flex flex-col sm:flex-row justify-center items-center mt-4 mx-auto" id={id}>
  <input type="hidden" id="thatMomentInput" value={thatMoment} />
  <div
    class="text-center backdrop-blur-lg bg-white/30 border border-white/50 rounded-lg shadow-lg p-4 sm:p-8 transition-transform transform hover:scale-105 hover:bg-white/50 duration-300 w-3/4 sm:w-auto"
  >
    <div
      class="flex flex-col sm:flex-row justify-center items-center text-purple-900 text-4xl sm:text-6xl font-bold"
    >
      <!-- Días -->
      <div
        class="flex flex-col mx-2 sm:mx-4 transition-colors duration-300 hover:text-pink-600"
      >
        <p id="days" class="pixelify-sans">00</p>
        <p class="text-sm sm:text-lg mt-1 sm:mt-2 text-pink-600">Days</p>
      </div>
      <!-- Línea de separación -->
      <span class="my-2 sm:my-0 mx-2 sm:mx-4 h-1 sm:h-full border-t-2 sm:border-l-2 border-pink-600"></span>

      <!-- Horas -->
      <div
        class="flex flex-col mx-2 sm:mx-4 transition-colors duration-300 hover:text-pink-600"
      >
        <p id="hours" class="pixelify-sans">00</p>
        <p class="text-sm sm:text-lg mt-1 sm:mt-2 text-pink-600">Hours</p>
      </div>
      <!-- Línea de separación -->
      <span class="my-2 sm:my-0 mx-2 sm:mx-4 h-1 sm:h-full border-t-2 sm:border-l-2 border-pink-600"></span>

      <!-- Minutos -->
      <div
        class="flex flex-col mx-2 sm:mx-4 transition-colors duration-300 hover:text-pink-600"
      >
        <p id="minutes" class="pixelify-sans">00</p>
        <p class="text-sm sm:text-lg mt-1 sm:mt-2 text-pink-600">Minutes</p>
      </div>
      <!-- Línea de separación -->
      <span class="my-2 sm:my-0 mx-2 sm:mx-4 h-1 sm:h-full border-t-2 sm:border-l-2 border-pink-600"></span>

      <!-- Segundos -->
      <div
        class="flex flex-col mx-2 sm:mx-4 transition-colors duration-300 hover:text-pink-600"
      >
        <p id="seconds" class="pixelify-sans">00</p>
        <p class="text-sm sm:text-lg mt-1 sm:mt-2 text-pink-600">Seconds</p>
      </div>
    </div>

    <script type="module">
      let startTime, updatedTime, difference, tInterval;
      let running = false;

      const daysElement = document.getElementById("days");
      const hoursElement = document.getElementById("hours");
      const minutesElement = document.getElementById("minutes");
      const secondsElement = document.getElementById("seconds");

      function startTimer() {
        if (!running) {
          let thatMoment = document.getElementById("thatMomentInput").value;
          startTime =
            thatMoment > 0
              ? thatMoment
              : new Date().getTime(); // Use current time if thatMoment is not defined

          tInterval = setInterval(getShowTime, 1000); // Update every second
          running = true;
        }
      }

      function getShowTime() {
        updatedTime = new Date().getTime();
        difference = updatedTime - startTime;

        let days = Math.floor(difference / (1000 * 60 * 60 * 24));
        let hours = Math.floor(
          (difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
        );
        let minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));
        let seconds = Math.floor((difference % (1000 * 60)) / 1000);

        days = days < 10 ? "0" + days : days;
        hours = hours < 10 ? "0" + hours : hours;
        minutes = minutes < 10 ? "0" + minutes : minutes;
        seconds = seconds < 10 ? "0" + seconds : seconds;

        daysElement.textContent = days;
        hoursElement.textContent = hours;
        minutesElement.textContent = minutes;
        secondsElement.textContent = seconds;
      }

      document.addEventListener("DOMContentLoaded", () => {
        startTimer();
      });
    </script>
  </div>
</div>
